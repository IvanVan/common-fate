/**
 * Generated by orval v6.10.3 üç∫
 * Do not edit manually.
 * Common Fate
 * Common Fate API
 * OpenAPI spec version: 1.0
 */
import type {
  AccessRuleDetail,
  ProviderSetupResponseResponse,
  CreateProviderSetupRequestBody,
  FavoriteDetail,
  CreateFavoriteRequestBody
} from '.././types'
import { customInstance } from '../../custom-instance'


  
  // eslint-disable-next-line
  type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;

/**
 * Marks an access rule as archived.
Any pending requests for this access rule will be cancelled.
 * @summary Archive Access Rule
 */
export const adminArchiveAccessRule = (
    ruleId: string,
 options?: SecondParameter<typeof customInstance>) => {
      return customInstance<AccessRuleDetail>(
      {url: `/api/v1/admin/access-rules/${ruleId}/archive`, method: 'post'
    },
      options);
    }
  

/**
 * Delete an internal group
 * @summary Delete Group
 */
export const adminDeleteGroup = (
    groupId: string,
 options?: SecondParameter<typeof customInstance>) => {
      return customInstance<void>(
      {url: `/api/v1/admin/groups/${groupId}`, method: 'delete'
    },
      options);
    }
  

/**
 * Begins the guided setup process for a new Access Provider.
 * @summary Begin the setup process for a new Access Provider
 */
export const adminCreateProvidersetup = (
    createProviderSetupRequestBody: CreateProviderSetupRequestBody,
 options?: SecondParameter<typeof customInstance>) => {
      return customInstance<ProviderSetupResponseResponse>(
      {url: `/api/v1/admin/providersetups`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: createProviderSetupRequestBody
    },
      options);
    }
  

/**
 * Removes an in-progress provider setup and deletes all data relating to it.

Returns the deleted provider.
 * @summary Delete an in-progress provider setup
 */
export const adminDeleteProvidersetup = (
    providersetupId: string,
 options?: SecondParameter<typeof customInstance>) => {
      return customInstance<ProviderSetupResponseResponse>(
      {url: `/api/v1/admin/providersetups/${providersetupId}`, method: 'delete'
    },
      options);
    }
  

/**
 * Favorites an access request for a given user. This is used for frequent access requests saving time and repeated actions. 
 * @summary Create Favorite
 */
export const userCreateFavorite = (
    createFavoriteRequestBody: CreateFavoriteRequestBody,
 options?: SecondParameter<typeof customInstance>) => {
      return customInstance<FavoriteDetail>(
      {url: `/api/v1/favorites`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: createFavoriteRequestBody
    },
      options);
    }
  

/**
 * Delete a saved favorite
 */
export const userDeleteFavorite = (
    id: string,
 options?: SecondParameter<typeof customInstance>) => {
      return customInstance<void>(
      {url: `/api/v1/favorites/${id}`, method: 'delete'
    },
      options);
    }
  

/**
 * Update a favorite with new FavoriteDetails
 */
export const userUpdateFavorite = (
    id: string,
    createFavoriteRequestBody: CreateFavoriteRequestBody,
 options?: SecondParameter<typeof customInstance>) => {
      return customInstance<FavoriteDetail>(
      {url: `/api/v1/favorites/${id}`, method: 'put',
      headers: {'Content-Type': 'application/json', },
      data: createFavoriteRequestBody
    },
      options);
    }
  

